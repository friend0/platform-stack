Fetch secrets for the secret IDs in the input file.
Example:
	Input: cat deployments/secret-ids-ci.json:
	{
		"GCR_ACCESS_KEY_PUSH": "gcr-utmgcr-push-circleci-blue",
		"IBM_WEATHER_API_KEY": "platform-weather-local-default-IBM_WEATHER_API_KEY"
	}

	$ stack secrets fetch -e ci -p utmgsmdev -i deployments -o deployments
	Output: cat deployments/secrets-ci.json:
	{"GCR_ACCESS_KEY_PUSH": "***", "IBM_WEATHER_API_KEY":"***"}

Usage:
  stack secrets fetch [-e <env>] [-p <gcp-project-id>] [-i <input-file-directory>] [-o <output-file-directory>] [flags]

Flags:
  -e, --env string               Deployment target (e.g. local, ci, prod, etc.) (default "local")
  -h, --help                     help for fetch
  -i, --input string             Directory for the secret ID manifest file (manifest file needs to be named as: 'secret-ids-<env>.json') (default "deployments")
  -o, --output string            Directory for the output file (to be stored as 'secrets-<env>.json') (default "deployments")
  -p, --project string           GCP Project ID for Secret Manager (e.g. utmgsmdev, utmgsmstg, utmgsm, etc.) (default "utmgsmdev")
  -v, --sa-version string        Service account version flavor (blue|green) used as a postfix for environment variable 'GSM_SECRET_READER_<e>_<v>' to allow rotation (default "blue")
  -s, --service-account string   Path to the GSM Reader service account (default "/tmp/gsm-secret-reader.json")

Global Flags:
      --stack_config_file string   Set the name of the configuration file to be used (default ".stack-local")
  -r, --stack_directory string     Set the project directory for stack CLI (default ".")
