version: 2.1
orbs:
  go: circleci/go@0.2.0
jobs:
  build:
    machine:
      image: ubuntu-1604:201903-01    # recommended linux image - includes Ubuntu 16.04, docker 18.09.3, docker-compose 1.23.1
      docker_layer_caching: true
    environment:
      K8S_VERSION: v1.14.0
      KUBECONFIG: /home/circleci/.kube/config
      MINIKUBE_VERSION: v1.0.0
      MINIKUBE_WANTUPDATENOTIFICATION: false
      MINIKUBE_WANTREPORTERRORPROMPT: false
      MINIKUBE_HOME: /home/circleci
      CHANGE_MINIKUBE_NONE_USER: true
    working_directory: /home/circleci/src/github.com/altiscope/platform-stack
    steps:
      - checkout
      - run:
          name: Uninstall machine executor go
          command: |
            sudo rm -rf /usr/local/go
      - go/install:
          version: 1.13
      - go/load-cache

      - run:
          name: Install kube dependencies
          command: |
            printf "Installing kubetpl ...\n"
            curl -sSL https://github.com/shyiko/kubetpl/releases/download/0.9.0/kubetpl-0.9.0-"$(
            bash -c '[[ $OSTYPE == darwin* ]] && echo darwin || echo linux'
            )"-amd64 -o kubetpl && chmod a+x kubetpl && sudo mv kubetpl /usr/local/bin/

            printf "Installing kubectl ...\n"
            curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/"${K8S_VERSION}"/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
            mkdir -p "${HOME}"/.kube
            touch "${HOME}"/.kube/config

            printf "Installing minikube ...\n"
            curl -Lo minikube https://storage.googleapis.com/minikube/releases/"${MINIKUBE_VERSION}"/minikube-linux-amd64 && chmod +x minikube && sudo cp minikube /usr/local/bin/ && rm minikube

      - run:
          name: Start minikube
          command: |
            sudo -E minikube start --vm-driver=none --cpus 2 --memory 2048 --kubernetes-version=${K8S_VERSION}

      - run:
          name: Build executable
          command: |
            go build -o stack -v ./platform-stack/main.go

      - run:
          name: Copy executable onto path
          command: |
            sudo cp ./stack /usr/local/bin

      - run:
          name: Check source formatting
          command: |
            go fmt ./...

      - run:
          name: Vet source
          command: |
            go vet ./...

      - run:
          name: Wait for minikube
          command: |
            JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}';
            until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do
              sleep 1;
            done

      - run:
          name: Test source
          command: |
            go test -v ./...

      - go/save-cache

  deploy:
    docker:
      - image: circleci/golang:1.12
    steps:
      - checkout
      - run: go get -u github.com/mitchellh/gox
      - run: go get -u github.com/tcnksm/ghr
      - run: go get -u github.com/stevenmatthewt/semantics
      - run:
          name: cross compile
          command: |
            gox -os="linux darwin" -arch="amd64" -output="dist/stack_{{.OS}}_{{.Arch}}"
            cd dist/ && gzip *
      - run:
          name: create release
          command: |
            tag=$(semantics --output-tag)
            if [ "$tag" ]; then
              ghr -t $GIT_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME --replace $tag dist/
            else
              echo "The commit message(s) did not indicate a major/minor/patch version."
            fi

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master